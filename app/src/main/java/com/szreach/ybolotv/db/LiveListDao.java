package com.szreach.ybolotv.db;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.szreach.ybolotv.bean.LiveList;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "LIVE_LIST".
*/
public class LiveListDao extends AbstractDao<LiveList, Long> {

    public static final String TABLENAME = "LIVE_LIST";

    /**
     * Properties of entity LiveList.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property CoId = new Property(0, long.class, "coId", true, "_id");
        public final static Property ChannelId = new Property(1, String.class, "channelId", false, "CHANNEL_ID");
        public final static Property ChannelName = new Property(2, String.class, "channelName", false, "CHANNEL_NAME");
        public final static Property RtmpPush = new Property(3, String.class, "rtmpPush", false, "RTMP_PUSH");
        public final static Property RtmpHsPush = new Property(4, String.class, "rtmpHsPush", false, "RTMP_HS_PUSH");
        public final static Property ChannelFlag = new Property(5, int.class, "channelFlag", false, "CHANNEL_FLAG");
        public final static Property Ln01 = new Property(6, String.class, "ln01", false, "LN01");
        public final static Property Ln02 = new Property(7, String.class, "ln02", false, "LN02");
        public final static Property Ln03 = new Property(8, String.class, "ln03", false, "LN03");
        public final static Property Hn01 = new Property(9, String.class, "hn01", false, "HN01");
        public final static Property Hn02 = new Property(10, String.class, "hn02", false, "HN02");
        public final static Property Hn03 = new Property(11, String.class, "hn03", false, "HN03");
        public final static Property Ls01 = new Property(12, int.class, "ls01", false, "LS01");
        public final static Property Ls02 = new Property(13, int.class, "ls02", false, "LS02");
        public final static Property Ls03 = new Property(14, int.class, "ls03", false, "LS03");
        public final static Property Hs01 = new Property(15, int.class, "hs01", false, "HS01");
        public final static Property Hs02 = new Property(16, int.class, "hs02", false, "HS02");
        public final static Property Hs03 = new Property(17, int.class, "hs03", false, "HS03");
        public final static Property Ln04 = new Property(18, String.class, "ln04", false, "LN04");
        public final static Property Ln05 = new Property(19, String.class, "ln05", false, "LN05");
        public final static Property Ln06 = new Property(20, String.class, "ln06", false, "LN06");
        public final static Property Hn04 = new Property(21, String.class, "hn04", false, "HN04");
        public final static Property Hn05 = new Property(22, String.class, "hn05", false, "HN05");
        public final static Property Hn06 = new Property(23, String.class, "hn06", false, "HN06");
        public final static Property Ls04 = new Property(24, int.class, "ls04", false, "LS04");
        public final static Property Ls05 = new Property(25, int.class, "ls05", false, "LS05");
        public final static Property Ls06 = new Property(26, int.class, "ls06", false, "LS06");
        public final static Property Hs04 = new Property(27, int.class, "hs04", false, "HS04");
        public final static Property Hs05 = new Property(28, int.class, "hs05", false, "HS05");
        public final static Property Hs06 = new Property(29, int.class, "hs06", false, "HS06");
        public final static Property Ln07 = new Property(30, String.class, "ln07", false, "LN07");
        public final static Property Ls07 = new Property(31, int.class, "ls07", false, "LS07");
        public final static Property Ln11 = new Property(32, String.class, "ln11", false, "LN11");
        public final static Property Hn11 = new Property(33, String.class, "hn11", false, "HN11");
        public final static Property Ln17 = new Property(34, String.class, "ln17", false, "LN17");
        public final static Property L1 = new Property(35, int.class, "l1", false, "L1");
        public final static Property L2 = new Property(36, int.class, "l2", false, "L2");
        public final static Property LiveMovie = new Property(37, int.class, "liveMovie", false, "LIVE_MOVIE");
        public final static Property LiveRes = new Property(38, int.class, "liveRes", false, "LIVE_RES");
        public final static Property ResNum = new Property(39, int.class, "resNum", false, "RES_NUM");
        public final static Property MovieSd = new Property(40, int.class, "movieSd", false, "MOVIE_SD");
        public final static Property MovieHd = new Property(41, int.class, "movieHd", false, "MOVIE_HD");
        public final static Property ResSd = new Property(42, int.class, "resSd", false, "RES_SD");
        public final static Property ResHd = new Property(43, int.class, "resHd", false, "RES_HD");
        public final static Property StreamType = new Property(44, int.class, "streamType", false, "STREAM_TYPE");
        public final static Property RtmpAddress = new Property(45, String.class, "rtmpAddress", false, "RTMP_ADDRESS");
        public final static Property HlsAddress = new Property(46, String.class, "hlsAddress", false, "HLS_ADDRESS");
        public final static Property LiveId = new Property(47, String.class, "liveId", false, "LIVE_ID");
        public final static Property LiveName = new Property(48, String.class, "liveName", false, "LIVE_NAME");
        public final static Property LiveStart = new Property(49, String.class, "liveStart", false, "LIVE_START");
        public final static Property LiveEnd = new Property(50, String.class, "liveEnd", false, "LIVE_END");
        public final static Property LiveLevel = new Property(51, int.class, "liveLevel", false, "LIVE_LEVEL");
        public final static Property LivePass = new Property(52, String.class, "livePass", false, "LIVE_PASS");
        public final static Property LiveFlag = new Property(53, int.class, "liveFlag", false, "LIVE_FLAG");
        public final static Property CommReview = new Property(54, int.class, "commReview", false, "COMM_REVIEW");
        public final static Property LoId = new Property(55, String.class, "loId", false, "LO_ID");
        public final static Property VoId = new Property(56, String.class, "voId", false, "VO_ID");
        public final static Property QnId = new Property(57, String.class, "qnId", false, "QN_ID");
        public final static Property OnLine = new Property(58, int.class, "onLine", false, "ON_LINE");
        public final static Property PayType = new Property(59, String.class, "payType", false, "PAY_TYPE");
        public final static Property PayMoney = new Property(60, double.class, "payMoney", false, "PAY_MONEY");
        public final static Property TemplatePc = new Property(61, String.class, "templatePc", false, "TEMPLATE_PC");
        public final static Property TemplateMb = new Property(62, String.class, "templateMb", false, "TEMPLATE_MB");
        public final static Property LiveRemark = new Property(63, String.class, "liveRemark", false, "LIVE_REMARK");
        public final static Property CfgBackgroundImg1 = new Property(64, String.class, "cfgBackgroundImg1", false, "CFG_BACKGROUND_IMG1");
        public final static Property CfgType = new Property(65, String.class, "cfgType", false, "CFG_TYPE");
        public final static Property IsConfig = new Property(66, int.class, "isConfig", false, "IS_CONFIG");
        public final static Property Title = new Property(67, String.class, "title", false, "TITLE");
        public final static Property Item1 = new Property(68, String.class, "item1", false, "ITEM1");
        public final static Property Item2 = new Property(69, String.class, "item2", false, "ITEM2");
        public final static Property Item3 = new Property(70, String.class, "item3", false, "ITEM3");
        public final static Property Item4 = new Property(71, String.class, "item4", false, "ITEM4");
        public final static Property Item5 = new Property(72, String.class, "item5", false, "ITEM5");
        public final static Property Item6 = new Property(73, String.class, "item6", false, "ITEM6");
        public final static Property Item7 = new Property(74, String.class, "item7", false, "ITEM7");
        public final static Property Item8 = new Property(75, String.class, "item8", false, "ITEM8");
        public final static Property Item9 = new Property(76, String.class, "item9", false, "ITEM9");
        public final static Property Item10 = new Property(77, String.class, "item10", false, "ITEM10");
        public final static Property AutoReply = new Property(78, int.class, "autoReply", false, "AUTO_REPLY");
        public final static Property ReplyName = new Property(79, String.class, "replyName", false, "REPLY_NAME");
        public final static Property ReplyContent = new Property(80, String.class, "replyContent", false, "REPLY_CONTENT");
        public final static Property RecordId = new Property(81, String.class, "recordId", false, "RECORD_ID");
        public final static Property RecordStatus = new Property(82, int.class, "recordStatus", false, "RECORD_STATUS");
        public final static Property UserId = new Property(83, String.class, "userId", false, "USER_ID");
        public final static Property UserName = new Property(84, String.class, "userName", false, "USER_NAME");
        public final static Property VoiceCount = new Property(85, int.class, "voiceCount", false, "VOICE_COUNT");
        public final static Property LikeCount = new Property(86, int.class, "likeCount", false, "LIKE_COUNT");
        public final static Property HeadImg = new Property(87, String.class, "headImg", false, "HEAD_IMG");
        public final static Property OnlineCount = new Property(88, int.class, "onlineCount", false, "ONLINE_COUNT");
        public final static Property LiveType = new Property(89, int.class, "liveType", false, "LIVE_TYPE");
        public final static Property ChannelStatus = new Property(90, int.class, "channelStatus", false, "CHANNEL_STATUS");
        public final static Property AuthFlag = new Property(91, int.class, "authFlag", false, "AUTH_FLAG");
        public final static Property PayTypeStr = new Property(92, String.class, "payTypeStr", false, "PAY_TYPE_STR");
        public final static Property PhoneValidate = new Property(93, String.class, "phoneValidate", false, "PHONE_VALIDATE");
    }


    public LiveListDao(DaoConfig config) {
        super(config);
    }
    
    public LiveListDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"LIVE_LIST\" (" + //
                "\"_id\" INTEGER PRIMARY KEY NOT NULL ," + // 0: coId
                "\"CHANNEL_ID\" TEXT," + // 1: channelId
                "\"CHANNEL_NAME\" TEXT," + // 2: channelName
                "\"RTMP_PUSH\" TEXT," + // 3: rtmpPush
                "\"RTMP_HS_PUSH\" TEXT," + // 4: rtmpHsPush
                "\"CHANNEL_FLAG\" INTEGER NOT NULL ," + // 5: channelFlag
                "\"LN01\" TEXT," + // 6: ln01
                "\"LN02\" TEXT," + // 7: ln02
                "\"LN03\" TEXT," + // 8: ln03
                "\"HN01\" TEXT," + // 9: hn01
                "\"HN02\" TEXT," + // 10: hn02
                "\"HN03\" TEXT," + // 11: hn03
                "\"LS01\" INTEGER NOT NULL ," + // 12: ls01
                "\"LS02\" INTEGER NOT NULL ," + // 13: ls02
                "\"LS03\" INTEGER NOT NULL ," + // 14: ls03
                "\"HS01\" INTEGER NOT NULL ," + // 15: hs01
                "\"HS02\" INTEGER NOT NULL ," + // 16: hs02
                "\"HS03\" INTEGER NOT NULL ," + // 17: hs03
                "\"LN04\" TEXT," + // 18: ln04
                "\"LN05\" TEXT," + // 19: ln05
                "\"LN06\" TEXT," + // 20: ln06
                "\"HN04\" TEXT," + // 21: hn04
                "\"HN05\" TEXT," + // 22: hn05
                "\"HN06\" TEXT," + // 23: hn06
                "\"LS04\" INTEGER NOT NULL ," + // 24: ls04
                "\"LS05\" INTEGER NOT NULL ," + // 25: ls05
                "\"LS06\" INTEGER NOT NULL ," + // 26: ls06
                "\"HS04\" INTEGER NOT NULL ," + // 27: hs04
                "\"HS05\" INTEGER NOT NULL ," + // 28: hs05
                "\"HS06\" INTEGER NOT NULL ," + // 29: hs06
                "\"LN07\" TEXT," + // 30: ln07
                "\"LS07\" INTEGER NOT NULL ," + // 31: ls07
                "\"LN11\" TEXT," + // 32: ln11
                "\"HN11\" TEXT," + // 33: hn11
                "\"LN17\" TEXT," + // 34: ln17
                "\"L1\" INTEGER NOT NULL ," + // 35: l1
                "\"L2\" INTEGER NOT NULL ," + // 36: l2
                "\"LIVE_MOVIE\" INTEGER NOT NULL ," + // 37: liveMovie
                "\"LIVE_RES\" INTEGER NOT NULL ," + // 38: liveRes
                "\"RES_NUM\" INTEGER NOT NULL ," + // 39: resNum
                "\"MOVIE_SD\" INTEGER NOT NULL ," + // 40: movieSd
                "\"MOVIE_HD\" INTEGER NOT NULL ," + // 41: movieHd
                "\"RES_SD\" INTEGER NOT NULL ," + // 42: resSd
                "\"RES_HD\" INTEGER NOT NULL ," + // 43: resHd
                "\"STREAM_TYPE\" INTEGER NOT NULL ," + // 44: streamType
                "\"RTMP_ADDRESS\" TEXT," + // 45: rtmpAddress
                "\"HLS_ADDRESS\" TEXT," + // 46: hlsAddress
                "\"LIVE_ID\" TEXT," + // 47: liveId
                "\"LIVE_NAME\" TEXT," + // 48: liveName
                "\"LIVE_START\" TEXT," + // 49: liveStart
                "\"LIVE_END\" TEXT," + // 50: liveEnd
                "\"LIVE_LEVEL\" INTEGER NOT NULL ," + // 51: liveLevel
                "\"LIVE_PASS\" TEXT," + // 52: livePass
                "\"LIVE_FLAG\" INTEGER NOT NULL ," + // 53: liveFlag
                "\"COMM_REVIEW\" INTEGER NOT NULL ," + // 54: commReview
                "\"LO_ID\" TEXT," + // 55: loId
                "\"VO_ID\" TEXT," + // 56: voId
                "\"QN_ID\" TEXT," + // 57: qnId
                "\"ON_LINE\" INTEGER NOT NULL ," + // 58: onLine
                "\"PAY_TYPE\" TEXT," + // 59: payType
                "\"PAY_MONEY\" REAL NOT NULL ," + // 60: payMoney
                "\"TEMPLATE_PC\" TEXT," + // 61: templatePc
                "\"TEMPLATE_MB\" TEXT," + // 62: templateMb
                "\"LIVE_REMARK\" TEXT," + // 63: liveRemark
                "\"CFG_BACKGROUND_IMG1\" TEXT," + // 64: cfgBackgroundImg1
                "\"CFG_TYPE\" TEXT," + // 65: cfgType
                "\"IS_CONFIG\" INTEGER NOT NULL ," + // 66: isConfig
                "\"TITLE\" TEXT," + // 67: title
                "\"ITEM1\" TEXT," + // 68: item1
                "\"ITEM2\" TEXT," + // 69: item2
                "\"ITEM3\" TEXT," + // 70: item3
                "\"ITEM4\" TEXT," + // 71: item4
                "\"ITEM5\" TEXT," + // 72: item5
                "\"ITEM6\" TEXT," + // 73: item6
                "\"ITEM7\" TEXT," + // 74: item7
                "\"ITEM8\" TEXT," + // 75: item8
                "\"ITEM9\" TEXT," + // 76: item9
                "\"ITEM10\" TEXT," + // 77: item10
                "\"AUTO_REPLY\" INTEGER NOT NULL ," + // 78: autoReply
                "\"REPLY_NAME\" TEXT," + // 79: replyName
                "\"REPLY_CONTENT\" TEXT," + // 80: replyContent
                "\"RECORD_ID\" TEXT," + // 81: recordId
                "\"RECORD_STATUS\" INTEGER NOT NULL ," + // 82: recordStatus
                "\"USER_ID\" TEXT," + // 83: userId
                "\"USER_NAME\" TEXT," + // 84: userName
                "\"VOICE_COUNT\" INTEGER NOT NULL ," + // 85: voiceCount
                "\"LIKE_COUNT\" INTEGER NOT NULL ," + // 86: likeCount
                "\"HEAD_IMG\" TEXT," + // 87: headImg
                "\"ONLINE_COUNT\" INTEGER NOT NULL ," + // 88: onlineCount
                "\"LIVE_TYPE\" INTEGER NOT NULL ," + // 89: liveType
                "\"CHANNEL_STATUS\" INTEGER NOT NULL ," + // 90: channelStatus
                "\"AUTH_FLAG\" INTEGER NOT NULL ," + // 91: authFlag
                "\"PAY_TYPE_STR\" TEXT," + // 92: payTypeStr
                "\"PHONE_VALIDATE\" TEXT);"); // 93: phoneValidate
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"LIVE_LIST\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, LiveList entity) {
        stmt.clearBindings();
        stmt.bindLong(1, entity.getCoId());
 
        String channelId = entity.getChannelId();
        if (channelId != null) {
            stmt.bindString(2, channelId);
        }
 
        String channelName = entity.getChannelName();
        if (channelName != null) {
            stmt.bindString(3, channelName);
        }
 
        String rtmpPush = entity.getRtmpPush();
        if (rtmpPush != null) {
            stmt.bindString(4, rtmpPush);
        }
 
        String rtmpHsPush = entity.getRtmpHsPush();
        if (rtmpHsPush != null) {
            stmt.bindString(5, rtmpHsPush);
        }
        stmt.bindLong(6, entity.getChannelFlag());
 
        String ln01 = entity.getLn01();
        if (ln01 != null) {
            stmt.bindString(7, ln01);
        }
 
        String ln02 = entity.getLn02();
        if (ln02 != null) {
            stmt.bindString(8, ln02);
        }
 
        String ln03 = entity.getLn03();
        if (ln03 != null) {
            stmt.bindString(9, ln03);
        }
 
        String hn01 = entity.getHn01();
        if (hn01 != null) {
            stmt.bindString(10, hn01);
        }
 
        String hn02 = entity.getHn02();
        if (hn02 != null) {
            stmt.bindString(11, hn02);
        }
 
        String hn03 = entity.getHn03();
        if (hn03 != null) {
            stmt.bindString(12, hn03);
        }
        stmt.bindLong(13, entity.getLs01());
        stmt.bindLong(14, entity.getLs02());
        stmt.bindLong(15, entity.getLs03());
        stmt.bindLong(16, entity.getHs01());
        stmt.bindLong(17, entity.getHs02());
        stmt.bindLong(18, entity.getHs03());
 
        String ln04 = entity.getLn04();
        if (ln04 != null) {
            stmt.bindString(19, ln04);
        }
 
        String ln05 = entity.getLn05();
        if (ln05 != null) {
            stmt.bindString(20, ln05);
        }
 
        String ln06 = entity.getLn06();
        if (ln06 != null) {
            stmt.bindString(21, ln06);
        }
 
        String hn04 = entity.getHn04();
        if (hn04 != null) {
            stmt.bindString(22, hn04);
        }
 
        String hn05 = entity.getHn05();
        if (hn05 != null) {
            stmt.bindString(23, hn05);
        }
 
        String hn06 = entity.getHn06();
        if (hn06 != null) {
            stmt.bindString(24, hn06);
        }
        stmt.bindLong(25, entity.getLs04());
        stmt.bindLong(26, entity.getLs05());
        stmt.bindLong(27, entity.getLs06());
        stmt.bindLong(28, entity.getHs04());
        stmt.bindLong(29, entity.getHs05());
        stmt.bindLong(30, entity.getHs06());
 
        String ln07 = entity.getLn07();
        if (ln07 != null) {
            stmt.bindString(31, ln07);
        }
        stmt.bindLong(32, entity.getLs07());
 
        String ln11 = entity.getLn11();
        if (ln11 != null) {
            stmt.bindString(33, ln11);
        }
 
        String hn11 = entity.getHn11();
        if (hn11 != null) {
            stmt.bindString(34, hn11);
        }
 
        String ln17 = entity.getLn17();
        if (ln17 != null) {
            stmt.bindString(35, ln17);
        }
        stmt.bindLong(36, entity.getL1());
        stmt.bindLong(37, entity.getL2());
        stmt.bindLong(38, entity.getLiveMovie());
        stmt.bindLong(39, entity.getLiveRes());
        stmt.bindLong(40, entity.getResNum());
        stmt.bindLong(41, entity.getMovieSd());
        stmt.bindLong(42, entity.getMovieHd());
        stmt.bindLong(43, entity.getResSd());
        stmt.bindLong(44, entity.getResHd());
        stmt.bindLong(45, entity.getStreamType());
 
        String rtmpAddress = entity.getRtmpAddress();
        if (rtmpAddress != null) {
            stmt.bindString(46, rtmpAddress);
        }
 
        String hlsAddress = entity.getHlsAddress();
        if (hlsAddress != null) {
            stmt.bindString(47, hlsAddress);
        }
 
        String liveId = entity.getLiveId();
        if (liveId != null) {
            stmt.bindString(48, liveId);
        }
 
        String liveName = entity.getLiveName();
        if (liveName != null) {
            stmt.bindString(49, liveName);
        }
 
        String liveStart = entity.getLiveStart();
        if (liveStart != null) {
            stmt.bindString(50, liveStart);
        }
 
        String liveEnd = entity.getLiveEnd();
        if (liveEnd != null) {
            stmt.bindString(51, liveEnd);
        }
        stmt.bindLong(52, entity.getLiveLevel());
 
        String livePass = entity.getLivePass();
        if (livePass != null) {
            stmt.bindString(53, livePass);
        }
        stmt.bindLong(54, entity.getLiveFlag());
        stmt.bindLong(55, entity.getCommReview());
 
        String loId = entity.getLoId();
        if (loId != null) {
            stmt.bindString(56, loId);
        }
 
        String voId = entity.getVoId();
        if (voId != null) {
            stmt.bindString(57, voId);
        }
 
        String qnId = entity.getQnId();
        if (qnId != null) {
            stmt.bindString(58, qnId);
        }
        stmt.bindLong(59, entity.getOnLine());
 
        String payType = entity.getPayType();
        if (payType != null) {
            stmt.bindString(60, payType);
        }
        stmt.bindDouble(61, entity.getPayMoney());
 
        String templatePc = entity.getTemplatePc();
        if (templatePc != null) {
            stmt.bindString(62, templatePc);
        }
 
        String templateMb = entity.getTemplateMb();
        if (templateMb != null) {
            stmt.bindString(63, templateMb);
        }
 
        String liveRemark = entity.getLiveRemark();
        if (liveRemark != null) {
            stmt.bindString(64, liveRemark);
        }
 
        String cfgBackgroundImg1 = entity.getCfgBackgroundImg1();
        if (cfgBackgroundImg1 != null) {
            stmt.bindString(65, cfgBackgroundImg1);
        }
 
        String cfgType = entity.getCfgType();
        if (cfgType != null) {
            stmt.bindString(66, cfgType);
        }
        stmt.bindLong(67, entity.getIsConfig());
 
        String title = entity.getTitle();
        if (title != null) {
            stmt.bindString(68, title);
        }
 
        String item1 = entity.getItem1();
        if (item1 != null) {
            stmt.bindString(69, item1);
        }
 
        String item2 = entity.getItem2();
        if (item2 != null) {
            stmt.bindString(70, item2);
        }
 
        String item3 = entity.getItem3();
        if (item3 != null) {
            stmt.bindString(71, item3);
        }
 
        String item4 = entity.getItem4();
        if (item4 != null) {
            stmt.bindString(72, item4);
        }
 
        String item5 = entity.getItem5();
        if (item5 != null) {
            stmt.bindString(73, item5);
        }
 
        String item6 = entity.getItem6();
        if (item6 != null) {
            stmt.bindString(74, item6);
        }
 
        String item7 = entity.getItem7();
        if (item7 != null) {
            stmt.bindString(75, item7);
        }
 
        String item8 = entity.getItem8();
        if (item8 != null) {
            stmt.bindString(76, item8);
        }
 
        String item9 = entity.getItem9();
        if (item9 != null) {
            stmt.bindString(77, item9);
        }
 
        String item10 = entity.getItem10();
        if (item10 != null) {
            stmt.bindString(78, item10);
        }
        stmt.bindLong(79, entity.getAutoReply());
 
        String replyName = entity.getReplyName();
        if (replyName != null) {
            stmt.bindString(80, replyName);
        }
 
        String replyContent = entity.getReplyContent();
        if (replyContent != null) {
            stmt.bindString(81, replyContent);
        }
 
        String recordId = entity.getRecordId();
        if (recordId != null) {
            stmt.bindString(82, recordId);
        }
        stmt.bindLong(83, entity.getRecordStatus());
 
        String userId = entity.getUserId();
        if (userId != null) {
            stmt.bindString(84, userId);
        }
 
        String userName = entity.getUserName();
        if (userName != null) {
            stmt.bindString(85, userName);
        }
        stmt.bindLong(86, entity.getVoiceCount());
        stmt.bindLong(87, entity.getLikeCount());
 
        String headImg = entity.getHeadImg();
        if (headImg != null) {
            stmt.bindString(88, headImg);
        }
        stmt.bindLong(89, entity.getOnlineCount());
        stmt.bindLong(90, entity.getLiveType());
        stmt.bindLong(91, entity.getChannelStatus());
        stmt.bindLong(92, entity.getAuthFlag());
 
        String payTypeStr = entity.getPayTypeStr();
        if (payTypeStr != null) {
            stmt.bindString(93, payTypeStr);
        }
 
        String phoneValidate = entity.getPhoneValidate();
        if (phoneValidate != null) {
            stmt.bindString(94, phoneValidate);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, LiveList entity) {
        stmt.clearBindings();
        stmt.bindLong(1, entity.getCoId());
 
        String channelId = entity.getChannelId();
        if (channelId != null) {
            stmt.bindString(2, channelId);
        }
 
        String channelName = entity.getChannelName();
        if (channelName != null) {
            stmt.bindString(3, channelName);
        }
 
        String rtmpPush = entity.getRtmpPush();
        if (rtmpPush != null) {
            stmt.bindString(4, rtmpPush);
        }
 
        String rtmpHsPush = entity.getRtmpHsPush();
        if (rtmpHsPush != null) {
            stmt.bindString(5, rtmpHsPush);
        }
        stmt.bindLong(6, entity.getChannelFlag());
 
        String ln01 = entity.getLn01();
        if (ln01 != null) {
            stmt.bindString(7, ln01);
        }
 
        String ln02 = entity.getLn02();
        if (ln02 != null) {
            stmt.bindString(8, ln02);
        }
 
        String ln03 = entity.getLn03();
        if (ln03 != null) {
            stmt.bindString(9, ln03);
        }
 
        String hn01 = entity.getHn01();
        if (hn01 != null) {
            stmt.bindString(10, hn01);
        }
 
        String hn02 = entity.getHn02();
        if (hn02 != null) {
            stmt.bindString(11, hn02);
        }
 
        String hn03 = entity.getHn03();
        if (hn03 != null) {
            stmt.bindString(12, hn03);
        }
        stmt.bindLong(13, entity.getLs01());
        stmt.bindLong(14, entity.getLs02());
        stmt.bindLong(15, entity.getLs03());
        stmt.bindLong(16, entity.getHs01());
        stmt.bindLong(17, entity.getHs02());
        stmt.bindLong(18, entity.getHs03());
 
        String ln04 = entity.getLn04();
        if (ln04 != null) {
            stmt.bindString(19, ln04);
        }
 
        String ln05 = entity.getLn05();
        if (ln05 != null) {
            stmt.bindString(20, ln05);
        }
 
        String ln06 = entity.getLn06();
        if (ln06 != null) {
            stmt.bindString(21, ln06);
        }
 
        String hn04 = entity.getHn04();
        if (hn04 != null) {
            stmt.bindString(22, hn04);
        }
 
        String hn05 = entity.getHn05();
        if (hn05 != null) {
            stmt.bindString(23, hn05);
        }
 
        String hn06 = entity.getHn06();
        if (hn06 != null) {
            stmt.bindString(24, hn06);
        }
        stmt.bindLong(25, entity.getLs04());
        stmt.bindLong(26, entity.getLs05());
        stmt.bindLong(27, entity.getLs06());
        stmt.bindLong(28, entity.getHs04());
        stmt.bindLong(29, entity.getHs05());
        stmt.bindLong(30, entity.getHs06());
 
        String ln07 = entity.getLn07();
        if (ln07 != null) {
            stmt.bindString(31, ln07);
        }
        stmt.bindLong(32, entity.getLs07());
 
        String ln11 = entity.getLn11();
        if (ln11 != null) {
            stmt.bindString(33, ln11);
        }
 
        String hn11 = entity.getHn11();
        if (hn11 != null) {
            stmt.bindString(34, hn11);
        }
 
        String ln17 = entity.getLn17();
        if (ln17 != null) {
            stmt.bindString(35, ln17);
        }
        stmt.bindLong(36, entity.getL1());
        stmt.bindLong(37, entity.getL2());
        stmt.bindLong(38, entity.getLiveMovie());
        stmt.bindLong(39, entity.getLiveRes());
        stmt.bindLong(40, entity.getResNum());
        stmt.bindLong(41, entity.getMovieSd());
        stmt.bindLong(42, entity.getMovieHd());
        stmt.bindLong(43, entity.getResSd());
        stmt.bindLong(44, entity.getResHd());
        stmt.bindLong(45, entity.getStreamType());
 
        String rtmpAddress = entity.getRtmpAddress();
        if (rtmpAddress != null) {
            stmt.bindString(46, rtmpAddress);
        }
 
        String hlsAddress = entity.getHlsAddress();
        if (hlsAddress != null) {
            stmt.bindString(47, hlsAddress);
        }
 
        String liveId = entity.getLiveId();
        if (liveId != null) {
            stmt.bindString(48, liveId);
        }
 
        String liveName = entity.getLiveName();
        if (liveName != null) {
            stmt.bindString(49, liveName);
        }
 
        String liveStart = entity.getLiveStart();
        if (liveStart != null) {
            stmt.bindString(50, liveStart);
        }
 
        String liveEnd = entity.getLiveEnd();
        if (liveEnd != null) {
            stmt.bindString(51, liveEnd);
        }
        stmt.bindLong(52, entity.getLiveLevel());
 
        String livePass = entity.getLivePass();
        if (livePass != null) {
            stmt.bindString(53, livePass);
        }
        stmt.bindLong(54, entity.getLiveFlag());
        stmt.bindLong(55, entity.getCommReview());
 
        String loId = entity.getLoId();
        if (loId != null) {
            stmt.bindString(56, loId);
        }
 
        String voId = entity.getVoId();
        if (voId != null) {
            stmt.bindString(57, voId);
        }
 
        String qnId = entity.getQnId();
        if (qnId != null) {
            stmt.bindString(58, qnId);
        }
        stmt.bindLong(59, entity.getOnLine());
 
        String payType = entity.getPayType();
        if (payType != null) {
            stmt.bindString(60, payType);
        }
        stmt.bindDouble(61, entity.getPayMoney());
 
        String templatePc = entity.getTemplatePc();
        if (templatePc != null) {
            stmt.bindString(62, templatePc);
        }
 
        String templateMb = entity.getTemplateMb();
        if (templateMb != null) {
            stmt.bindString(63, templateMb);
        }
 
        String liveRemark = entity.getLiveRemark();
        if (liveRemark != null) {
            stmt.bindString(64, liveRemark);
        }
 
        String cfgBackgroundImg1 = entity.getCfgBackgroundImg1();
        if (cfgBackgroundImg1 != null) {
            stmt.bindString(65, cfgBackgroundImg1);
        }
 
        String cfgType = entity.getCfgType();
        if (cfgType != null) {
            stmt.bindString(66, cfgType);
        }
        stmt.bindLong(67, entity.getIsConfig());
 
        String title = entity.getTitle();
        if (title != null) {
            stmt.bindString(68, title);
        }
 
        String item1 = entity.getItem1();
        if (item1 != null) {
            stmt.bindString(69, item1);
        }
 
        String item2 = entity.getItem2();
        if (item2 != null) {
            stmt.bindString(70, item2);
        }
 
        String item3 = entity.getItem3();
        if (item3 != null) {
            stmt.bindString(71, item3);
        }
 
        String item4 = entity.getItem4();
        if (item4 != null) {
            stmt.bindString(72, item4);
        }
 
        String item5 = entity.getItem5();
        if (item5 != null) {
            stmt.bindString(73, item5);
        }
 
        String item6 = entity.getItem6();
        if (item6 != null) {
            stmt.bindString(74, item6);
        }
 
        String item7 = entity.getItem7();
        if (item7 != null) {
            stmt.bindString(75, item7);
        }
 
        String item8 = entity.getItem8();
        if (item8 != null) {
            stmt.bindString(76, item8);
        }
 
        String item9 = entity.getItem9();
        if (item9 != null) {
            stmt.bindString(77, item9);
        }
 
        String item10 = entity.getItem10();
        if (item10 != null) {
            stmt.bindString(78, item10);
        }
        stmt.bindLong(79, entity.getAutoReply());
 
        String replyName = entity.getReplyName();
        if (replyName != null) {
            stmt.bindString(80, replyName);
        }
 
        String replyContent = entity.getReplyContent();
        if (replyContent != null) {
            stmt.bindString(81, replyContent);
        }
 
        String recordId = entity.getRecordId();
        if (recordId != null) {
            stmt.bindString(82, recordId);
        }
        stmt.bindLong(83, entity.getRecordStatus());
 
        String userId = entity.getUserId();
        if (userId != null) {
            stmt.bindString(84, userId);
        }
 
        String userName = entity.getUserName();
        if (userName != null) {
            stmt.bindString(85, userName);
        }
        stmt.bindLong(86, entity.getVoiceCount());
        stmt.bindLong(87, entity.getLikeCount());
 
        String headImg = entity.getHeadImg();
        if (headImg != null) {
            stmt.bindString(88, headImg);
        }
        stmt.bindLong(89, entity.getOnlineCount());
        stmt.bindLong(90, entity.getLiveType());
        stmt.bindLong(91, entity.getChannelStatus());
        stmt.bindLong(92, entity.getAuthFlag());
 
        String payTypeStr = entity.getPayTypeStr();
        if (payTypeStr != null) {
            stmt.bindString(93, payTypeStr);
        }
 
        String phoneValidate = entity.getPhoneValidate();
        if (phoneValidate != null) {
            stmt.bindString(94, phoneValidate);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.getLong(offset + 0);
    }    

    @Override
    public LiveList readEntity(Cursor cursor, int offset) {
        LiveList entity = new LiveList( //
            cursor.getLong(offset + 0), // coId
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // channelId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // channelName
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // rtmpPush
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // rtmpHsPush
            cursor.getInt(offset + 5), // channelFlag
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // ln01
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // ln02
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // ln03
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // hn01
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // hn02
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // hn03
            cursor.getInt(offset + 12), // ls01
            cursor.getInt(offset + 13), // ls02
            cursor.getInt(offset + 14), // ls03
            cursor.getInt(offset + 15), // hs01
            cursor.getInt(offset + 16), // hs02
            cursor.getInt(offset + 17), // hs03
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // ln04
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // ln05
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // ln06
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // hn04
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // hn05
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // hn06
            cursor.getInt(offset + 24), // ls04
            cursor.getInt(offset + 25), // ls05
            cursor.getInt(offset + 26), // ls06
            cursor.getInt(offset + 27), // hs04
            cursor.getInt(offset + 28), // hs05
            cursor.getInt(offset + 29), // hs06
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // ln07
            cursor.getInt(offset + 31), // ls07
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // ln11
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // hn11
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // ln17
            cursor.getInt(offset + 35), // l1
            cursor.getInt(offset + 36), // l2
            cursor.getInt(offset + 37), // liveMovie
            cursor.getInt(offset + 38), // liveRes
            cursor.getInt(offset + 39), // resNum
            cursor.getInt(offset + 40), // movieSd
            cursor.getInt(offset + 41), // movieHd
            cursor.getInt(offset + 42), // resSd
            cursor.getInt(offset + 43), // resHd
            cursor.getInt(offset + 44), // streamType
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // rtmpAddress
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // hlsAddress
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // liveId
            cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48), // liveName
            cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49), // liveStart
            cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50), // liveEnd
            cursor.getInt(offset + 51), // liveLevel
            cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52), // livePass
            cursor.getInt(offset + 53), // liveFlag
            cursor.getInt(offset + 54), // commReview
            cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55), // loId
            cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56), // voId
            cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57), // qnId
            cursor.getInt(offset + 58), // onLine
            cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59), // payType
            cursor.getDouble(offset + 60), // payMoney
            cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61), // templatePc
            cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62), // templateMb
            cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63), // liveRemark
            cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64), // cfgBackgroundImg1
            cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65), // cfgType
            cursor.getInt(offset + 66), // isConfig
            cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67), // title
            cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68), // item1
            cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69), // item2
            cursor.isNull(offset + 70) ? null : cursor.getString(offset + 70), // item3
            cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71), // item4
            cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72), // item5
            cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73), // item6
            cursor.isNull(offset + 74) ? null : cursor.getString(offset + 74), // item7
            cursor.isNull(offset + 75) ? null : cursor.getString(offset + 75), // item8
            cursor.isNull(offset + 76) ? null : cursor.getString(offset + 76), // item9
            cursor.isNull(offset + 77) ? null : cursor.getString(offset + 77), // item10
            cursor.getInt(offset + 78), // autoReply
            cursor.isNull(offset + 79) ? null : cursor.getString(offset + 79), // replyName
            cursor.isNull(offset + 80) ? null : cursor.getString(offset + 80), // replyContent
            cursor.isNull(offset + 81) ? null : cursor.getString(offset + 81), // recordId
            cursor.getInt(offset + 82), // recordStatus
            cursor.isNull(offset + 83) ? null : cursor.getString(offset + 83), // userId
            cursor.isNull(offset + 84) ? null : cursor.getString(offset + 84), // userName
            cursor.getInt(offset + 85), // voiceCount
            cursor.getInt(offset + 86), // likeCount
            cursor.isNull(offset + 87) ? null : cursor.getString(offset + 87), // headImg
            cursor.getInt(offset + 88), // onlineCount
            cursor.getInt(offset + 89), // liveType
            cursor.getInt(offset + 90), // channelStatus
            cursor.getInt(offset + 91), // authFlag
            cursor.isNull(offset + 92) ? null : cursor.getString(offset + 92), // payTypeStr
            cursor.isNull(offset + 93) ? null : cursor.getString(offset + 93) // phoneValidate
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, LiveList entity, int offset) {
        entity.setCoId(cursor.getLong(offset + 0));
        entity.setChannelId(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setChannelName(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setRtmpPush(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setRtmpHsPush(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setChannelFlag(cursor.getInt(offset + 5));
        entity.setLn01(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setLn02(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setLn03(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setHn01(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setHn02(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setHn03(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setLs01(cursor.getInt(offset + 12));
        entity.setLs02(cursor.getInt(offset + 13));
        entity.setLs03(cursor.getInt(offset + 14));
        entity.setHs01(cursor.getInt(offset + 15));
        entity.setHs02(cursor.getInt(offset + 16));
        entity.setHs03(cursor.getInt(offset + 17));
        entity.setLn04(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setLn05(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setLn06(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setHn04(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setHn05(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setHn06(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setLs04(cursor.getInt(offset + 24));
        entity.setLs05(cursor.getInt(offset + 25));
        entity.setLs06(cursor.getInt(offset + 26));
        entity.setHs04(cursor.getInt(offset + 27));
        entity.setHs05(cursor.getInt(offset + 28));
        entity.setHs06(cursor.getInt(offset + 29));
        entity.setLn07(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setLs07(cursor.getInt(offset + 31));
        entity.setLn11(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setHn11(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setLn17(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setL1(cursor.getInt(offset + 35));
        entity.setL2(cursor.getInt(offset + 36));
        entity.setLiveMovie(cursor.getInt(offset + 37));
        entity.setLiveRes(cursor.getInt(offset + 38));
        entity.setResNum(cursor.getInt(offset + 39));
        entity.setMovieSd(cursor.getInt(offset + 40));
        entity.setMovieHd(cursor.getInt(offset + 41));
        entity.setResSd(cursor.getInt(offset + 42));
        entity.setResHd(cursor.getInt(offset + 43));
        entity.setStreamType(cursor.getInt(offset + 44));
        entity.setRtmpAddress(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setHlsAddress(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setLiveId(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setLiveName(cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48));
        entity.setLiveStart(cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49));
        entity.setLiveEnd(cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50));
        entity.setLiveLevel(cursor.getInt(offset + 51));
        entity.setLivePass(cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52));
        entity.setLiveFlag(cursor.getInt(offset + 53));
        entity.setCommReview(cursor.getInt(offset + 54));
        entity.setLoId(cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55));
        entity.setVoId(cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56));
        entity.setQnId(cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57));
        entity.setOnLine(cursor.getInt(offset + 58));
        entity.setPayType(cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59));
        entity.setPayMoney(cursor.getDouble(offset + 60));
        entity.setTemplatePc(cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61));
        entity.setTemplateMb(cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62));
        entity.setLiveRemark(cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63));
        entity.setCfgBackgroundImg1(cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64));
        entity.setCfgType(cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65));
        entity.setIsConfig(cursor.getInt(offset + 66));
        entity.setTitle(cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67));
        entity.setItem1(cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68));
        entity.setItem2(cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69));
        entity.setItem3(cursor.isNull(offset + 70) ? null : cursor.getString(offset + 70));
        entity.setItem4(cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71));
        entity.setItem5(cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72));
        entity.setItem6(cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73));
        entity.setItem7(cursor.isNull(offset + 74) ? null : cursor.getString(offset + 74));
        entity.setItem8(cursor.isNull(offset + 75) ? null : cursor.getString(offset + 75));
        entity.setItem9(cursor.isNull(offset + 76) ? null : cursor.getString(offset + 76));
        entity.setItem10(cursor.isNull(offset + 77) ? null : cursor.getString(offset + 77));
        entity.setAutoReply(cursor.getInt(offset + 78));
        entity.setReplyName(cursor.isNull(offset + 79) ? null : cursor.getString(offset + 79));
        entity.setReplyContent(cursor.isNull(offset + 80) ? null : cursor.getString(offset + 80));
        entity.setRecordId(cursor.isNull(offset + 81) ? null : cursor.getString(offset + 81));
        entity.setRecordStatus(cursor.getInt(offset + 82));
        entity.setUserId(cursor.isNull(offset + 83) ? null : cursor.getString(offset + 83));
        entity.setUserName(cursor.isNull(offset + 84) ? null : cursor.getString(offset + 84));
        entity.setVoiceCount(cursor.getInt(offset + 85));
        entity.setLikeCount(cursor.getInt(offset + 86));
        entity.setHeadImg(cursor.isNull(offset + 87) ? null : cursor.getString(offset + 87));
        entity.setOnlineCount(cursor.getInt(offset + 88));
        entity.setLiveType(cursor.getInt(offset + 89));
        entity.setChannelStatus(cursor.getInt(offset + 90));
        entity.setAuthFlag(cursor.getInt(offset + 91));
        entity.setPayTypeStr(cursor.isNull(offset + 92) ? null : cursor.getString(offset + 92));
        entity.setPhoneValidate(cursor.isNull(offset + 93) ? null : cursor.getString(offset + 93));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(LiveList entity, long rowId) {
        entity.setCoId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(LiveList entity) {
        if(entity != null) {
            return entity.getCoId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(LiveList entity) {
        throw new UnsupportedOperationException("Unsupported for entities with a non-null key");
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
